$_current-link-border-width: govuk-spacing(1);

.x-govuk-secondary-navigation {
  border-bottom: 1px solid $govuk-border-colour;
}

.x-govuk-secondary-navigation__link {
  @include govuk-link-common;
  @include govuk-link-style-no-underline;
  @include govuk-link-style-no-visited-state;
}

.x-govuk-secondary-navigation__list {
  @include govuk-font(19);
  list-style: none;
  margin: 0;
  margin-bottom: govuk-spacing(3);
  padding: 0;

  @include govuk-media-query($from: tablet) {
    align-items: start;
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 0;
  }

  // IE11 trips over flexbox and doesnâ€™t wrap anything, making all of the items
  // into a single, horizontally scrolling row. This CSS hack removes the
  // flexbox definition for IE 10 & 11, reverting it a non-flexbox version.
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    display: block;
  }
}

.x-govuk-secondary-navigation__list-item {
  border: 0 solid $govuk-link-colour;
  margin: govuk-spacing(2) 0;
  position: relative;

  @include govuk-media-query($from: tablet) {
    margin-bottom: 0;
    margin-top: 0;
    padding: govuk-spacing(4) 0;

    &:not(:last-child) {
      @include govuk-responsive-margin(6, $direction: right);
    }
  }
}

.x-govuk-secondary-navigation__list-item--current {
  @include govuk-media-query($until: tablet) {
    border-left-width: $_current-link-border-width;
    // Negative offset the left margin so we can place a current page indicator
    // to the left without misaligning the list item text.
    margin-left: ((govuk-spacing(2) + $_current-link-border-width) * -1);
    padding-left: govuk-spacing(2);
  }

  @include govuk-media-query($from: tablet) {
    border-bottom-width: $_current-link-border-width;
    padding-bottom: govuk-spacing(4) - $_current-link-border-width;
  }
}
