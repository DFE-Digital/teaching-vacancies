how does our current location thing work? i.e within 20 miles

coordinates = Geocoding.new(normalised_query).coordinates

# TODO: Geocoding class currently returns this on error, it should probably raise a
# suitable error instead. Refactor later!
return scope.none if coordinates == [0, 0]

point = "POINT(#{coordinates.second} #{coordinates.first})"

scope.where("ST_DWithin(#{field_name}, ?, ?)", point, radius)

-----

we already have geocoder gem installed.

can calculate distance like this: 

x = Geocoding.new('e14 9pg').coordinates
y = Geocoding.new('cw8 2hp').coordinates
Geocoder::Calculations.distance_between(x, y)
<!-- 161.2319947021576 (default metric is miles) -->

---- 

Vacancies that we won't be able to provide a distance for:
Quite a lot of vacancies which do not have a geolocation (approx 60k/180k).
Some vacancies may have multiple geolocations


