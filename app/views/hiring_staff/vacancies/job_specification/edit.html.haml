- content_for :page_title_prefix, "#{@job_specification_form.errors.present? ? 'Error: ' : ''}Edit the Job specification"

%h1.govuk-heading-l
  = t('jobs.edit_heading', school: @school.name)
= render 'hiring_staff/vacancies/error_messages', errors: @job_specification_form.errors
= simple_form_for @job_specification_form, html: { class: 'vacancy-form' }, method: :put, url: school_job_job_specification_path(@job_specification_form.id) do |f|
  %h2.govuk-heading-m
    = t('jobs.job_specification')

  .govuk-grid-row
    .govuk-grid-column-one-half
      = f.input :job_title,
                label: t('jobs.job_title'),
                hint: t('jobs.form_hints.job_title'),
                wrapper_html: {id: 'job_title'},
                required: true
      = f.input :job_description,
                wrapper: 'textarea',
                as: :text,
                label: t('jobs.description'),
                hint: t('jobs.form_hints.description'),
                input_html: {rows: 10},
                wrapper_html: {id: 'job_description'},
                required: true
      = f.input :benefits,
                wrapper: 'textarea',
                as: :text,
                label: t('jobs.benefits'),
                hint: t('jobs.form_hints.benefits').html_safe,
                input_html: {rows: 5},
                wrapper_html: {id: 'benefits'},
                required: false
      = f.input :subject_id,
                wrapper: 'select',
                label: t('jobs.main_subject'),
                hint: t('jobs.form_hints.subject'),
                wrapper_html: {id: 'main_subject'},
                collection: subject_options,
                required: false
      = f.input :first_supporting_subject_id,
                label: t('jobs.first_supporting_subject'),
                hint: t('jobs.form_hints.subject'),
                wrapper_html: {id: 'first_supporting_subject'},
                collection: subject_options,
                required: false
      = f.input :second_supporting_subject_id,
                label: t('jobs.second_supporting_subject'),
                hint: t('jobs.form_hints.subject'),
                wrapper_html: {id: 'second_supporting_subject'},
                collection: subject_options,
                required: false
      = f.input :working_pattern,
                wrapper: 'select',
                label: t('jobs.working_pattern'),
                collection: working_pattern_options,
                wrapper_html: {id: 'working_pattern'},
                required: true

      %fieldset.govuk-fieldset#pay_scale_range
        %legend.form-label.govuk-label= "#{t('jobs.pay_scale_range')} (optional)"
        %span.govuk-hint= t('jobs.form_hints.pay_scale_range')
        .govuk-form-group
          = f.input :min_pay_scale_id,
                    wrapper: 'select',
                    collection: pay_scale_options,
                    label_method: :label,
                    label: false,
                    required: false,
                    wrapper_html: { class: 'mb0' },
                    input_html: { 'aria-label': t('jobs.aria_labels.minimum_pay_scale_range') }

          %p.value-to-value to

          = f.input :max_pay_scale_id,
                    wrapper: 'select',
                    collection: pay_scale_options,
                    label_method: :label,
                    label: false,
                    required: false,
                    input_html: { 'aria-label': t('jobs.aria_labels.maximum_pay_scale_range') }

      %fieldset.govuk-fieldset#salary_range
        %legend.form-label.govuk-label= t('jobs.salary_range')
        .govuk-form-group
          = f.input :minimum_salary,
                    wrapper: 'money',
                    hint: t('jobs.form_hints.salary_range'),
                    required: true,
                    label: '£',
                    wrapper_html: { id: 'minimum_salary' },
                    input_html: { class: 'govuk-!-width-one-half', 'aria-label': t('jobs.aria_labels.minimum_salary') }

          %p.value-to-value to

          = f.input :maximum_salary,
                    wrapper: 'money',
                    required: true,
                    label: '£',
                    wrapper_html: { id: 'maximum_salary' },
                    input_html: { class: 'govuk-!-width-one-half', 'aria-label': t('jobs.aria_labels.maximum_salary') }

      = render partial: 'pro_rata_warning'

      = f.input :newly_qualified_teacher, as: :boolean,
                hint: t('jobs.form_hints.newly_qualified_teacher'),
                wrapper: :inline_checkbox,
                wrapper_html: { id: 'newly_qualified_teacher' },
                input_html: { 'aria-label': t('jobs.aria_labels.newly_qualified_teacher') }
      = f.input :flexible_working, as: :boolean,
                hint: t('jobs.form_hints.flexible_working'),
                wrapper: :inline_checkbox,
                wrapper_html: { id: 'flexible_working' },
                input_html: { 'aria-label': t('jobs.aria_labels.flexible_working') }
      = f.input :weekly_hours,
                label: t('jobs.weekly_hours'),
                as: :decimal,
                hint: t('jobs.form_hints.weekly_hours'),
                wrapper_html: {id: 'weekly_hours'},
                input_html: { class: 'govuk-!-width-one-half' },
                required: false
      = f.input :leadership_id,
                wrapper: 'select',
                label: t('jobs.leadership_level'),
                collection: Leadership.order(:title),
                wrapper_html: {id: 'leadership'},
                required: false

      %div.govuk-form-group#starts_on
        = f.gov_uk_date_field :starts_on,
          legend_text: "#{t('jobs.starts_on')} (optional)",
          legend_class: 'govuk-label',
          form_hint_text: t('jobs.form_hints.start_date',
                            date: l(Date.today + 3.months, format: :hinttext))


      %div.govuk-form-group#ends_on
        = f.gov_uk_date_field :ends_on,
          legend_text: "#{t('jobs.ends_on')} (optional)",
          legend_class: 'govuk-label',
          form_hint_text: t('jobs.form_hints.end_date',
                            date: l(Date.today + 6.months, format: :hinttext))

      = f.button :submit, t('buttons.update_job')
