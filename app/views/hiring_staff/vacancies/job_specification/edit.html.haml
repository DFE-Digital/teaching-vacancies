%h1.heading-large
  = t('jobs.edit_heading', school: @school.name)
= render 'hiring_staff/vacancies/error_messages', errors: @job_specification_form.errors
= simple_form_for @job_specification_form, html: { class: 'vacancy-form' }, method: :put, url: school_job_job_specification_path(@school, @job_specification_form.id) do |f|
  %h2.heading-medium
    = t('jobs.job_specification')

  .grid-row
    .column-one-half
      = f.input :job_title,
                label: t('jobs.job_title'),
                hint: t('jobs.form_hints.job_title'),
                wrapper_html: {id: 'job_title'},
                required: true
      = f.input :job_description,
                as: :text,
                label: t('jobs.description'),
                hint: t('jobs.form_hints.description'),
                input_html: {rows: 10},
                wrapper_html: {id: 'job_description'},
                required: true
      = f.input :benefits,
                as: :text,
                label: t('jobs.benefits'),
                hint: t('jobs.form_hints.benefits'),
                input_html: {rows: 5},
                wrapper_html: {id: 'benefits'},
                required: false
      = f.input :subject_id,
                label: t('jobs.main_subject'),
                hint: t('jobs.form_hints.main_subject'),
                wrapper_html: {id: 'subject'},
                collection: Subject.order(:name),
                required: false
      %fieldset.form-group#pay_scale_range
        %label.form-label.form-label-bold= "#{t('jobs.pay_scale_range')} (optional)"
        %span.form-hint= t('jobs.form_hints.pay_scale_range')

        = f.input :min_pay_scale_id,
                  collection: pay_scale_options,
                  label_method: :label,
                  label: false,
                  required: false,
                  wrapper: false

        to

        = f.input :max_pay_scale_id,
                  collection: pay_scale_options,
                  label_method: :label,
                  label: false,
                  required: false,
                  wrapper: false

      %fieldset.form-group#salary_range
        %label.form-label.form-label-bold= t('jobs.salary_range')
        %span.form-hint= t('jobs.form_hints.salary_range')

        .salary_field.form-group.mb0{class: ("form-group-error" if @job_specification_form.errors.details[:minimum_salary].present?)}
          .salary_input_wrapper
            %span.pound_sign £
            = f.input :minimum_salary,
                      as: :integer,
                      required: true,
                      wrapper: false,
                      label: false,
                      input_html: { class: 'form-control-1-8', step: '1', min: '22917', max: '200000', onchange: "this.value = removeCommaFromNumber(this.value)" }

        to

        .salary_field.form-group{class: ("form-group-error" if @job_specification_form.errors.details[:maximum_salary].present?)}
          .salary_input_wrapper
            %span.pound_sign £
            = f.input :maximum_salary,
                      as: :integer,
                      wrapper: false,
                      required: true,
                      label: false,
                      input_html: { class: 'form-control-1-8', step: '1', min: '22917', max: '200000', onchange: "this.value = removeCommaFromNumber(this.value)" }

      = f.input :working_pattern,
                label: t('jobs.working_pattern'),
                collection: working_pattern_options,
                wrapper_html: {id: 'working_pattern'},
                required: true
      = f.input :flexible_working, as: :boolean,
                hint: t('jobs.form_hints.flexible_working'),
                wrapper: :inline_checkbox,
                wrapper_html: { id: 'flexible_working' }
      = f.input :weekly_hours,
                label: t('jobs.weekly_hours'),
                as: :decimal,
                hint: t('jobs.form_hints.weekly_hours'),
                wrapper_html: {id: 'weekly_hours'},
                required: false
      = f.input :leadership_id,
                label: t('jobs.leadership_level'),
                collection: Leadership.order(:title),
                wrapper_html: {id: 'leadership'},
                required: false

      %div.form-group#starts_on
        = f.gov_uk_date_field :starts_on,
          legend_text: "#{t('jobs.starts_on')} (optional)",
          legend_class: 'form-label-bold',
          form_hint_text: t('jobs.form_hints.start_date',
                            date: l(Date.today + 3.months, format: :hinttext))


      %div.form-group#ends_on
        = f.gov_uk_date_field :ends_on,
          legend_text: "#{t('jobs.ends_on')} (optional)",
          legend_class: 'form-label-bold',
          form_hint_text: t('jobs.form_hints.end_date',
                            date: l(Date.today + 6.months, format: :hinttext))

      = f.button :submit, t('buttons.update_job')
