ruby:
  items = [
    {
      legend: t("jobs.filters.job_roles"),
      key: "job_roles",
      attribute: :job_roles,
      selected: @form.job_roles.reject { |role| role == "ect_suitable" },
      options: @form.job_role_options,
      value_method: :first,
      text_method: :last,
      selected_method: :last,
      small: true,
    },
    {
      legend: t("jobs.filters.ect_suitable"),
      key: "ect_suitable",
      attribute: :job_roles,
      selected: @form.job_roles.include?("ect_suitable") ? @form.job_roles : [],
      options: @form.ect_suitable_options,
      value_method: :first,
      text_method: :second,
      selected_method: :last,
      small: true,
    },
    {
      legend: t("jobs.filters.send_responsible"),
      key: "send_responsible",
      attribute: :job_roles,
      selected: @form.job_roles.include?("send_responsible") ? @form.job_roles : [],
      options: @form.send_responsible_options,
      value_method: :first,
      text_method: :second,
      selected_method: :last,
      small: true,
    },
    {
      legend: t("jobs.filters.phases"),
      key: "education_phase",
      attribute: :phases,
      selected: @form.phases,
      options: @form.phase_options,
      value_method: :first,
      text_method: :last,
      selected_method: :last,
      small: true,
    },
    {
      legend: t("jobs.filters.working_patterns"),
      key: "working_patterns",
      attribute: :working_patterns,
      selected: @form.working_patterns,
      options: @form.working_pattern_options,
      value_method: :first,
      text_method: :last,
      selected_method: :last,
      small: true,
    },
  ]

/ .search-controls__panel id="content"
  / = render(PanelComponent.new(button_text: t("buttons.filters_toggle_panel", count: @form.total_filters), heading_text: "Filter results")) do |panel|
  /   - panel.body do
= render(FiltersComponent.new(form: f,
  filters: { total_count: @form.total_filters },
  items: items,
  options: { remove_buttons: true, mobile_variant: true, close_all: true, autosubmit_form: true },
  html_attributes: { tabindex: "-1", id: id }))

/ .panel-component.js-action data-controller="panel" data-content-id="filters-component" data-close-container="filters-component__heading__container"
/   button.panel-component__toggle.govuk-button.govuk-button--secondary type="button" data-panel-target="toggle" data-action="panel#toggleVisibility"
/     = t("buttons.filters_toggle_panel", count: @form.total_filters)
