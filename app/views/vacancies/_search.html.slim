ruby:
  items = [
    {
      legend: t("jobs.filters.job_roles"),
      key: "job_roles",
      attribute: :job_roles,
      selected: @form.job_roles.reject { |role| role == "ect_suitable" },
      options: @form.job_role_options,
      value_method: :first,
      text_method: :last,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.ect_suitable"),
      key: "ect_suitable",
      attribute: :job_roles,
      selected: @form.job_roles.include?("ect_suitable") ? @form.job_roles : [],
      options: @form.ect_suitable_options,
      value_method: :first,
      text_method: :second,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.send_responsible"),
      key: "send_responsible",
      attribute: :job_roles,
      selected: @form.job_roles.include?("send_responsible") ? @form.job_roles : [],
      options: @form.send_responsible_options,
      value_method: :first,
      text_method: :second,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.phases"),
      key: "education_phase",
      attribute: :phases,
      selected: @form.phases,
      options: @form.phase_options,
      value_method: :first,
      text_method: :last,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.working_patterns"),
      key: "working_patterns",
      attribute: :working_patterns,
      selected: @form.working_patterns,
      options: @form.working_pattern_options,
      value_method: :first,
      text_method: :last,
      selected_method: :last,
    },
  ]
- if current_variant?(:"2021_11_desktop_search_results_page_test", :present)
  = form_for @form, as: "", url: jobs_path, method: :get, html: { id: "filter-form", data: { "auto-submit": true }, class: "filters-form", role: "search", aria: { label: "Search criteria" } } do |f|
    .search-controls
      .search-controls__panel
        - if current_variant?(:"2021_10_mobile_search_panel_test", :overlay)
          = render(PanelComponent.new(button_text: t("buttons.search_toggle_panel"), heading_text: t("jobs.search.title"))) do |panel|
            - panel.body do
              = render "shared/search/keyword", f: f
              = render "shared/search/location", hint: true, f: f
              = render "shared/search/current_location", loaderElement: "location-field"
              = render "shared/search/radius", f: f, wide: true

              = f.hidden_field :jobs_sort, value: @form.jobs_sort
              = f.govuk_submit t("buttons.search"), classes: "govuk-button govuk-!-margin-bottom-0 govuk-!-width-full"
        - else
          .search-controls__panel__filters
            h2.govuk-heading-m = t("jobs.search.title")

            = render "shared/search/keyword", f: f
            = render "shared/search/location", hint: true, f: f
            = render "shared/search/current_location", loaderElement: "location-field"
            = render "shared/search/radius", f: f, wide: true

            = f.hidden_field :jobs_sort, value: @form.jobs_sort
            = f.govuk_submit t("buttons.search"), classes: "govuk-button govuk-!-margin-bottom-0 govuk-!-width-full"

      .search-controls__panel
        = render(PanelComponent.new(button_text: t("buttons.filters_toggle_panel", count: @form.total_filters), heading_text: "Filter results")) do |panel|
          - panel.body do
            = render(FiltersComponent.new(form: f,
              filters: { total_count: @form.total_filters },
              items: items,
              options: { remove_buttons: true, mobile_variant: true, close_all: true },
              html_attributes: { tabindex: "-1", id: "filters-component" }))
- else
  .search-controls
    .search-controls__panel
      = render(PanelComponent.new(button_text: t("buttons.filters_toggle_panel", count: @form.total_filters), heading_text: "Filter results")) do |panel|
        - panel.body do
          noscript
            = f.govuk_submit t("buttons.search"), classes: "govuk-button govuk-!-margin-bottom-5"
          = render(FiltersComponent.new(form: f,
            filters: { total_count: @form.total_filters },
            items: items,
            options: { remove_buttons: true, mobile_variant: true, close_all: true },
            html_attributes: { tabindex: "-1", id: "filters-component" }))
