ruby:
  filter_types = [
    {
      legend: t("jobs.filters.visa_sponsorship_availability.legend"),
      key: :visa_sponsorship_availability,
      selected: form.visa_sponsorship_availability,
      options: form.visa_sponsorship_availability_options,
      value_method: :first,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.job_roles"),
      key: :job_roles,
      selected: form.job_roles,
      options: form.job_role_options,
      value_method: :first,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.phases"),
      key: :phases,
      selected: form.phases,
      options: form.phase_options,
      value_method: :first,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.subject"),
      key: :subjects,
      selected: form.subjects,
      options: SUBJECT_OPTIONS,
      value_method: :first,
      selected_method: :first,
      },
    {
      legend: t("jobs.filters.ect_suitable"),
      key: :ect_statuses,
      selected: form.ect_statuses,
      options: form.ect_status_options,
      value_method: :first,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.organisation_type"),
      key: :organisation_types,
      selected: form.organisation_types,
      options: form.organisation_type_options,
      value_method: :first,
      selected_method: :first,
    },
    {
      legend: t("jobs.filters.school_type"),
      key: :school_types,
      selected: form.school_types,
      options: form.school_type_options,
      value_method: :first,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.working_patterns"),
      key: :working_patterns,
      selected: form.working_patterns,
      options: form.working_pattern_options,
      value_method: :first,
      selected_method: :last,
    },
    {
      legend: t("jobs.filters.quick_apply"),
      key: :quick_apply,
      selected: form.quick_apply,
      options: form.quick_apply_options,
      value_method: :value,
      selected_method: :text,
    },
  ]

- roles = capture do
  = govuk_details(summary_text: t("jobs.filters.job_roles"), open: true) do
    = f.govuk_collection_check_boxes(:job_roles, form.job_role_options, :first, :last, small: true, legend: nil, hint: nil)
= filters(submit_button: f.govuk_submit(t("buttons.apply_filters")),
  filters: { total_count: form.total_filters },
  clear_filters_link: { text: t("shared.filter_group.clear_all_filters"), url: jobs_path(vacancies_search.clear_filters_params) },
  options: { heading_text: "Filter", remove_filter_links: true },
  html_attributes: { tabindex: "-1", id: "filters-component" }) do |filters_component|
    - filters_component.with_remove_filter_links do |rb|
      - filter_types.each do |filter_type|
        - rb.with_group(**filter_type.merge(remove_filter_link: { url_helper: :jobs_path, params: vacancies_search.remove_filter_params }))
    - filters_component.with_group key: "visa_sponsorship_availability", component: f.govuk_collection_check_boxes(:visa_sponsorship_availability, form.visa_sponsorship_availability_options, :first, :last, small: true, legend: { text: t("jobs.filters.visa_sponsorship_availability.legend") }, hint: nil)
    - filters_component.with_group key: "job_roles", component: roles
    - filters_component.with_group key: "education_phase", component: f.govuk_collection_check_boxes(:phases, form.phase_options, :first, :last, small: true, legend: { text: t("jobs.filters.phases") }, hint: nil)
    = render "shared/subjects_filter", filters_component: filters_component, f: f
    - filters_component.with_group key: "ect_statuses", component: f.govuk_collection_check_boxes(:ect_statuses, form.ect_status_options, :first, :last, small: true, legend: { text: t("jobs.filters.ect_suitable") }, hint: nil)
    - filters_component.with_group key: "organisation_types", component: f.govuk_collection_check_boxes(:organisation_types, form.organisation_type_options, :first, :first, :last, small: true, legend: { text: t("jobs.filters.organisation_type") }, hint: nil)
    - filters_component.with_group key: "school_types", component: f.govuk_collection_check_boxes(:school_types, f.object.school_type_options, :first, :last, small: true, legend: { text: t("jobs.filters.school_type") }, hint: nil)
    - filters_component.with_group key: "working_patterns", component: f.govuk_collection_check_boxes(:working_patterns, form.working_pattern_options, :first, :last, small: true, legend: { text: t("jobs.filters.working_patterns") }, hint: nil)
    - filters_component.with_group key: "quick_apply", component: f.govuk_collection_check_boxes(:quick_apply, form.quick_apply_options, :value, :text, :hint, small: true, legend: { text: t("jobs.filters.quick_apply") }, hint: nil)
