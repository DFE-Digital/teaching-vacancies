-# Usage to include filter group
-#
-# = render 'shared/filter_group', f: <FormBuilder form>,
-#   filters: {
-#     title: <String>,
-#     removeButtons: <Boolean>,
-#     totalCount: <Integer>,
-#     :has_submit_button => <Boolean>,
-#     closeAll: <Boolean>,
-#     :items => [
-#       {:title => <String>, :key => <String>, :search => <Boolean>, attribute: <Symbol>, :options => <Array>, value_method: <Symbol>, text_method: <Symbol>, small: <Boolean> }
-#     ]
-#   }

- if filters.present?
  .moj-filter
    - if filters[:title]
      .moj-filter__header
        .selected-filters__heading
          %span.moj-filter__heading-title
            %h2.govuk-heading-s
              = filters[:title]
          %a.govuk-link.govuk-link--no-visited-state{ id: 'close-all-groups' }
            = t('shared.filter_group.close_all_filter_groups')

    - if filters[:totalCount] > 0 && filters[:removeButtons]
      .moj-filter__content
        .moj-filter__selected
          .selected-filters__heading{ class: 'govuk-!-margin-bottom-2' }
            .govuk-body{ class: 'govuk-!-margin-bottom-0' }
              = t('shared.filter_group.current_selected_filters')
            %button.govuk-link.govuk-link--no-visited-state{ id: 'clear-filters-button' }
              = t('shared.filter_group.clear_all_filters')

          - filters[:items].each do |group|
            .govuk-heading-s{ class: 'govuk-!-margin-bottom-0 govuk-!-font-weight-bold' }
              = group[:title]

            %ul.moj-filter-tags
              - group[:options].each do |tag|
                - if group[:selected].include? tag.id
                  %li
                    %button.moj-filter__tag{ data: { group: group[:key], key: tag.id } }
                      %i.fa.fa-close
                      %span.govuk-visually-hidden
                        = t('shared.filter_group.remove_filter_hidden')
                      = tag.name

- if filters[:has_submit_button]
  = f.govuk_submit t('buttons.apply_filters'), classes: "govuk-!-margin-top-4 govuk-!-margin-bottom-2 filters-submit"

.accordion-group.govuk-accordion{ id: 'accordion-default', data: { module: "govuk-accordion" } }

  - filters[:items].each_with_index do |group, index|
    .govuk-accordion__section.accordion-content__group.filter-group__container
      .govuk-accordion__section-header
        %h3.govuk-accordion__section-heading
          %span.govuk-accordion__section-button{ id: "accordion-default-heading-#{index}" }
            = group[:title]

      .govuk-accordion__section-content.filter-group__checkboxes{ id: "accordion-default-content-#{index}", aria: { labelledby: "accordion-default-heading-#{index}" }, data: { group: group[:key] } }
        = render 'shared/checkbox_group', f: f,
          search: group[:search],
          attribute_name: group[:attribute],
          options: group[:options],
          value_method: group[:value_method],
          text_method: group[:text_method],
          hint_method: group[:hint_method],
          small: group[:small]
