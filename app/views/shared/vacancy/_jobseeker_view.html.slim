= render BannerComponent.new do
    = govuk_breadcrumbs breadcrumbs: { "#{t("breadcrumbs.home")}": root_path,
                                       "#{t("breadcrumbs.jobs")}": referred_from_jobs_path? ? request.referrer : jobs_path,
                                       "#{@vacancy.job_title}": "" }

    - if @vacancy.expired?
      = govuk_tag text: t("jobs.expired_tag").upcase,
                  colour: "orange",
                  classes: "govuk-!-margin-bottom-2 govuk-!-margin-top-4"

    h1.govuk-heading-xl class="govuk-!-margin-bottom-2"
      = @vacancy.job_title
    h2.govuk-caption-l.job-caption class="govuk-!-margin-bottom-5 govuk-!-margin-top-0"
      = vacancy_full_job_location(@vacancy)

    .govuk-grid-row
      - if @vacancy.enable_job_applications? && @vacancy.expires_at.future?
        .govuk-grid-column-one-third
          - if defined?(job_application) && job_application.present?
            - if job_application.draft?
              = render BannerButtonComponent.new text: t("jobseekers.job_applications.banner_links.draft"),
                href: jobseekers_job_application_review_path(job_application),
                icon: "green-tick"
            - elsif job_application.withdrawn?
              = render BannerButtonComponent.new text: t("jobseekers.job_applications.banner_links.withdrawn"),
                href: jobseekers_job_application_path(job_application),
                icon: "green-tick"
            - else
              = render BannerButtonComponent.new text: t("jobseekers.job_applications.banner_links.submitted"),
                href: jobseekers_job_application_path(job_application),
                icon: "green-tick"
          - else
            = render BannerButtonComponent.new text: t("jobseekers.job_applications.banner_links.apply"),
              href: new_jobseekers_job_job_application_path(@vacancy.id),
              icon: "apply"

      .govuk-grid-column-one-third
        / The "origin" param is used both for the back button on the subsequent page and for performance analysis.
        = render BannerButtonComponent.new text: t("jobs.alert.similar.terse"),
          href: new_subscription_path,
          icon: "alert-blue",
          params: { search_criteria: @devised_job_alert_search_criteria, origin: request.original_fullpath }

      - unless defined?(job_application) && job_application.present?
        .govuk-grid-column-one-third
          = render BannerButtonComponent.new text: t("jobseekers.saved_jobs.#{@saved_job.present? ? 'saved' : 'save'}"),
            href: @saved_job.present? ? jobseekers_saved_job_path(@vacancy.id, @saved_job) : new_jobseekers_saved_job_path(@vacancy.id),
            icon: @saved_job.present? ? "saved" : "save",
            method: @saved_job.present? ? :delete : :get,
            params: { click_event: "vacancy_save_to_account_clicked", click_event_data: { vacancy_id: StringAnonymiser.new(@vacancy.id) } }

.govuk-grid-row

  .govuk-grid-column-one-third
    = render "/vacancies/key_dates_sidebar"

  .govuk-grid-column-two-thirds

    - if @vacancy.organisations.many?
      = govuk_notification_banner title: t("banners.important"), classes: "govuk-!-margin-bottom-5" do
        = t("messages.jobs.multi_school_job_notification_html", organisation_type: organisation_type_basic(@vacancy.parent_organisation))

    .content-pills class="govuk-!-margin-bottom-6"
      h3.govuk-heading-s class="govuk-!-margin-bottom-3" = t("jobs.contents")
      .govuk-grid-row
        / Up to four half columns in one row so that they automatically wrap depending on how many are present
        .govuk-grid-column-one-half
          = render PillLinkComponent.new text: "Job details", href: "#job-details"
        - if @vacancy.supporting_documents.any?
          .govuk-grid-column-one-half
            = render PillLinkComponent.new text: "Supporting documents", href: "#supporting-documents"
        .govuk-grid-column-one-half
          = render PillLinkComponent.new text: t("organisation.overview_link_text.#{@vacancy.job_location}"), href: "#school-overview"
        .govuk-grid-column-one-half
          = render PillLinkComponent.new text: t("organisation.location_link_text.#{@vacancy.job_location}"), href: "#school-location"

    = render(Jobseekers::VacancyDetailsComponent.new(vacancy: @vacancy))
    = render(Jobseekers::OrganisationOverviews::SchoolGroupComponent.new(vacancy: @vacancy))
    = render(Jobseekers::OrganisationOverviews::SchoolComponent.new(vacancy: @vacancy))
    = render(Jobseekers::OrganisationOverviews::SchoolsComponent.new(vacancy: @vacancy))

    - if @similar_jobs.present?
      section.similar-jobs class="govuk-!-margin-bottom-5"
        h3.govuk-heading-m = t("jobs.similar_jobs")
        - @similar_jobs.in_groups_of(2, false).each do |row|
          .govuk-grid-row
            = render Jobseekers::SimilarJobComponent.with_collection(row)

    section
      p.icon.icon--left.icon--alert-blue
        = govuk_link_to(t("jobs.alert.similar.verbose.link_text"), new_subscription_path(search_criteria: @devised_job_alert_search_criteria, origin: request.original_fullpath), id: "job-alert-link-from-bottom-of-job-listing-gtm")
        =< t("jobs.alert.similar.verbose.reminder")

    = render "shared/vacancy/copy_vacancy_link"
