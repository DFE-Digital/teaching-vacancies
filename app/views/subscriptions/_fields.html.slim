= render "vacancies/search/keyword", f: f, wide: false
- unless @organisation
  .autocomplete data-source="getLocationSuggestions" data-controller="autocomplete"
    = f.govuk_text_field :location,
      label: { text: t("jobs.location"), size: "s" },
      hint: { text: t("subscriptions.new.location.hint") },
      form_group: { class: %w[location-finder__input govuk-!-margin-bottom-0] },
      data: { coordinates: @vacancies_search&.point_coordinates || @point_coordinates }
  = render "vacancies/search/current_location", target: "jobseekers-subscription-form-location-field"
  = render "vacancies/search/radius", f: f, wide: false

.divider-bottom class="govuk-!-margin-top-6"

.plain-styling
  = filters(submit_button: f.govuk_submit(t("buttons.apply_filters")),
    options: { remove_filter_links: false }) do |filters_component|
      = render "/subscriptions/job_roles_fields", filters_component: filters_component, f: f, form: @form
      = render "shared/subjects_filter", filters_component: filters_component, f: f
      - filters_component.with_group key: "ect_statuses", component: f.govuk_collection_check_boxes(:ect_statuses, @form.ect_status_options, :first, :last, small: false, legend: { text: t("jobs.filters.ect_suitable") }, hint: nil)
      - filters_component.with_group key: "education_phase", component: f.govuk_collection_check_boxes(:phases, @form.phase_options, :first, :last, small: false, legend: { text: t("jobs.filters.phases") }, hint: nil)
      - filters_component.with_group key: "working_patterns", component: f.govuk_collection_check_boxes(:working_patterns, @form.working_pattern_options, :first, :last, small: false, legend: { text: t("jobs.filters.working_patterns") }, hint: nil)

.divider-bottom class="govuk-!-margin-top-4"

- if jobseeker_signed_in?
  = f.hidden_field :email, value: current_jobseeker.email
- else
  = f.govuk_email_field :email, label: { size: "s" }, required: true

= f.govuk_collection_radio_buttons :frequency, Subscription.frequencies.keys, :to_s
