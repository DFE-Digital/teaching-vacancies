= render ReviewComponent.new id: "jobseekers-job-application-review-form-qualifications-field-error" do |review|
  - review.heading title: t("jobseekers.job_applications.build.qualifications.heading"),
                    text: job_application_review_edit_section_text(job_application, :qualifications),
                    href: jobseekers_job_application_build_path(job_application, :qualifications) do
      = job_application_review_section_tag(job_application, :qualifications)

  - review.body do
    - if job_application.qualifications.none?
      p.govuk-body = t(".none")
    - else
      = govuk_accordion do |accordion|
        - job_application.qualifications.each do |qualification|
          - accordion.add_section title: qualification.name do
            = govuk_summary_list do |summary|
              - if qualification.secondary?
                - summary.slot :row,
                                key: t(".subjects_and_grades"),
                                value: safe_join(qualification.qualification_results.map { |result| tag.div("#{result.subject} - #{result.grade}") })

              - qualification.display_attributes.each do |attribute|
                - if qualification[attribute].present?
                  - summary.slot :row,
                                  key: t("helpers.label.#{qualification_form_param_key(qualification.category)}.#{attribute}"),
                                  value: qualification[attribute]

              - unless qualification.finished_studying.nil?
                - summary.slot :row,
                                key: t("helpers.legend.#{qualification_form_param_key(qualification.category)}.finished_studying"),
                                value: safe_join([tag.div(I18n.t("helpers.label.jobseekers_job_application_details_qualifications_shared_labels.finished_studying_options.#{qualification.finished_studying}")),
                                                  tag.div(qualification.finished_studying_details.presence)])
