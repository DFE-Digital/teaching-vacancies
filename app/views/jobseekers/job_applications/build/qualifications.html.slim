- content_for :page_title_prefix, t(".title")

= render BannerComponent.new do
  = govuk_back_link text: t("buttons.back"), href: back_path, classes: "govuk-!-margin-top-3"
  .govuk-caption-l class="govuk-!-margin-top-5" = t("jobseekers.job_applications.caption", job_title: vacancy.job_title, organisation: vacancy.parent_organisation_name)
  h2.govuk-heading-xl class="govuk-!-margin-bottom-5" = t("jobseekers.job_applications.heading")

.govuk-grid-row
  .govuk-grid-column-two-thirds
    - if current_jobseeker.job_applications.not_draft.none?
      = render "caption"
    h1.govuk-heading-l = t(".heading")

    p.govuk-body = t(".description")

    - if job_application.qualifications.any?
      - job_application.qualification_groups.each do |group|
        = render DetailComponent.new title: (group.first.secondary? ? group.first.name.pluralize : group.first.name) do |detail|
          - detail.body do
            = govuk_summary_list classes: "govuk-!-margin-bottom-0" do |c|
              - if group.first.secondary?
                - c.slot(:row, key: t("jobseekers.job_applications.qualifications.subjects_and_grades"), value: group.map { |qual| sanitize([qual.subject, qual.grade].join(" â€“ ")) }.join("</br>").html_safe)
                - attributes = %w[institution year]
              - else
                - attributes = %w[subject institution grade year]
              - attributes.each do |attribute|
                - c.slot(:row, key: t("helpers.label.#{qualification_form_param_key(group.first.category)}.#{attribute}"), value: group.first[attribute]) if group.first[attribute].present?
              - unless group.first.finished_studying.nil?
                - c.slot(:row, key: t("helpers.legend.#{qualification_form_param_key(group.first.category)}.finished_studying"), value: [t("helpers.label.jobseekers_job_application_details_qualifications_shared_labels.finished_studying_options.#{group.first.finished_studying}"), sanitize(group.first.finished_studying_details.presence)].compact.join("</br>").html_safe)

          - detail.actions do
            = govuk_button_to t("buttons.delete"), destroy_jobseekers_job_application_qualifications_path(job_application), params: { ids: group.pluck(:id) }, method: :delete, class: "govuk-delete-link govuk-!-margin-bottom-0", form_class: "inline-block button_to"
            / TODO: correct the edit path once multiple qualifications can be edited in one page.
            = govuk_link_to t("buttons.edit"), edit_jobseekers_job_application_qualification_path(job_application, group), class: "govuk-link--no-visited-state inline-block"

      = govuk_link_to t("buttons.add_another_qualification"), select_category_jobseekers_job_application_qualifications_path(job_application), button: true, class: "govuk-button--secondary"
    - else
      = render EmptySectionComponent.new title: t(".no_qualifications") do
        = govuk_link_to t("buttons.add_qualification"), select_category_jobseekers_job_application_qualifications_path(job_application), button: true, class: "govuk-button--secondary govuk-!-margin-bottom-0"

    = form_for form, url: wizard_path, method: :patch do |f|
      = f.govuk_error_summary
      = f.govuk_submit t("buttons.save_and_continue") do
        = f.govuk_submit t("buttons.save_and_come_back"), secondary: true

  - if current_jobseeker.job_applications.not_draft.none?
    .govuk-grid-column-one-third
      = render "steps"
