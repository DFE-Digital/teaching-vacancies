h2 class="govuk-heading-m govuk-!-margin-bottom-4"
  = t("publishers.vacancies.build.job_details.step_title")

= govuk_summary_list(html_attributes: { id: "job_details" }) do |summary_list|
  - summary_list.with_row(html_attributes: { id: "job_location" }) do |row|
    - row.with_key
      = t("jobs.job_location")
    - row.with_value
      ul.govuk-list.govuk-list--spaced
        = vacancy_job_locations(vacancy)
    - unless current_organisation.school?
      - row.with_action text: t("buttons.change"),
                  href: organisation_job_build_path(vacancy.id, :job_location, "back_to_#{action_name}": "true"),
                  visually_hidden_text: t("publishers.vacancies.steps.job_location")

  - summary_list.with_row(html_attributes: { id: "job_title" }) do |row|
    - row.with_key
      = t("jobs.job_title")
    - row.with_value
      = vacancy.job_title
    - row.with_action text: t("buttons.change"),
                href: organisation_job_build_path(vacancy.id, :job_title, "back_to_#{action_name}": "true"),
                visually_hidden_text: t("jobs.job_title")

  - summary_list.with_row(html_attributes: { id: "job_role" }) do |row|
    - row.with_key
      = t("jobs.job_role")
    - row.with_value
      - vacancy.readable_job_roles
    - row.with_action text: t("buttons.change"),
                href: organisation_job_build_path(vacancy.id, :job_role, "back_to_#{action_name}": "true"),
                visually_hidden_text: t("publishers.vacancies.steps.job_role")

  - if vacancy.allow_key_stages? && vacancy.key_stages.any?
    - summary_list.with_row(html_attributes: { id: "key_stages" }) do |row|
      - row.with_key
        = t("jobs.key_stage", count: vacancy.key_stages.count)
      - row.with_value
        = vacancy.readable_key_stages
      - row.with_action text: t("buttons.change"),
                  href: organisation_job_build_path(vacancy.id, :key_stages, "back_to_#{action_name}": "true"),
                  visually_hidden_text: t("jobs.key_stage", count: vacancy.key_stages.count)

  - if vacancy.allow_subjects? && (vacancy.completed_steps.include?("subjects") || vacancy.completed_steps.include?("job_details"))
    - summary_list.with_row(html_attributes: { id: "subjects" }) do |row|
      - row.with_key
        = t("jobs.subjects", count: vacancy.subjects.count)
      - row.with_value
        = vacancy.subjects.any? ? vacancy.readable_subjects : t("jobs.not_defined")
      - row.with_action text: t("buttons.change"),
                  href: organisation_job_build_path(vacancy.id, :subjects, "back_to_#{action_name}": "true"),
                  visually_hidden_text: t("jobs.subjects", count: vacancy.subjects.count)

  - unless vacancy.contract_type.nil?
    - summary_list.with_row(html_attributes: { id: "contract_type" }) do |row|
      - row.with_key
        = t("jobs.contract_type")
      - row.with_value
        = vacancy.contract_type_with_duration
      - row.with_action text: t("buttons.change"),
                  href: organisation_job_build_path(vacancy.id, :contract_information, "back_to_#{action_name}": "true"),
                  visually_hidden_text: t("jobs.contract_type")

  - if vacancy.working_patterns.any?
    - summary_list.with_row(html_attributes: { id: "working_patterns" }) do |row|
      - row.with_key
        = t("jobs.working_patterns")
      - row.with_value
        = vacancy.readable_working_patterns
      - row.with_action text: t("buttons.change"),
                  href: organisation_job_build_path(vacancy.id, :contract_information, "back_to_#{action_name}": "true"),
                  visually_hidden_text: t("jobs.working_patterns")

    - summary_list.with_row(html_attributes: { id: "working_patterns_details" }) do |row|
      - row.with_key
        = t("jobs.working_patterns_details")
      - row.with_value
        = vacancy.working_patterns_details? ? vacancy.working_patterns_details : t("jobs.not_defined")
      - row.with_action text: t("buttons.change"),
                  href: organisation_job_build_path(vacancy.id, :contract_information, "back_to_#{action_name}": "true"),
                  visually_hidden_text: t("jobs.working_patterns")

    - unless vacancy.start_date_type.nil?
      - summary_list.with_row(html_attributes: { id: "start_date" }) do |row|
        - row.with_key
          = t("jobs.starts_on")
        - row.with_value
          - case vacancy.start_date_type
          - when "specific_date"
            = format_date(vacancy.starts_on)
          - when "date_range"
            = "#{format_date(vacancy.earliest_start_date)} to #{format_date(vacancy.latest_start_date)}"
          - when "other"
            = vacancy.other_start_date_details
          - when "asap"
            = t("helpers.legend.publishers_job_listing_start_date_form.asap")
          - else
            = t("jobs.not_defined")
        - row.with_action text: t("buttons.change"),
          href: organisation_job_build_path(vacancy.id, :start_date, "back_to_#{action_name}": "true"),
          visually_hidden_text: t("jobs.starts_on")

  - if vacancy.salary_types.any?
    - summary_list.with_row(html_attributes: { id: "salary" }) do |row|
      - row.with_key
        h4.govuk-heading-s = t("jobs.salary_details")
      - row.with_value
        ul.govuk-list.govuk-list--spaced
          - if vacancy.salary?
            li
              div => "#{t('jobs.annual_salary')}:"
              = vacancy.salary
          - if vacancy.actual_salary?
            li
              div => "#{t('jobs.actual_salary')}:"
              = vacancy.actual_salary
          - if vacancy.pay_scale?
            li
              div => "#{t('jobs.pay_scale')}:"
              = vacancy.pay_scale
          - if vacancy.hourly_rate?
            li
              div => "#{t('jobs.hourly_rate')}:"
              = vacancy.hourly_rate
      - row.with_action text: t("buttons.change"),
                    href: organisation_job_build_path(vacancy.id, :pay_package, "back_to_#{action_name}": "true"),
                    visually_hidden_text: t("jobs.salary_details")

  - unless vacancy.benefits.nil?
    - summary_list.with_row(html_attributes: { id: "benefits" }) do |row|
      - row.with_key
        h4.govuk-heading-s class="govuk-!-margin-bottom-0"
          = t("jobs.benefits")
      - row.with_value
        = vacancy.benefits? ? "Yes" : "No"
      - row.with_action text: t("buttons.change"),
                    href: organisation_job_build_path(vacancy.id, :pay_package, "back_to_#{action_name}": "true"),
                    visually_hidden_text: t("jobs.benefits")

  - if vacancy.benefits == true
    - summary_list.with_row(html_attributes: { id: "benefits_details" }) do |row|
      - row.with_key
        h4.govuk-heading-s class="govuk-!-margin-bottom-0"
          = t("jobs.benefits_details")
      - row.with_value
        = vacancy.benefits_details
      - row.with_action text: t("buttons.change"),
                    href: organisation_job_build_path(vacancy.id, :pay_package),
                    visually_hidden_text: t("jobs.benefits_details")
