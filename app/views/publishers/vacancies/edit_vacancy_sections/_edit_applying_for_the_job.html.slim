= render_divs_for_fields(Publishers::JobListing::ApplyingForTheJobForm)

= render ReviewComponent.new id: "applying_for_the_job" do |review|
  - review.heading title: t("publishers.vacancies.steps.applying_for_the_job"),
                   text: t("buttons.change"),
                   href: organisation_job_build_path(vacancy.id, :applying_for_the_job, back_to: local_assigns[:back_to])
    = review_section_tag(vacancy, %i[applying_for_the_job], [Publishers::JobListing::ApplyingForTheJobForm])

  - review.body do
    = validatable_summary_list(vacancy, show_errors: local_assigns[:show_errors], error_path: organisation_job_build_path(vacancy.id, :applying_for_the_job, back_to: local_assigns[:back_to])) do |list|
      - unless current_organisation.group_type == "local_authority"
        - list.row :enable_job_applications

      - if vacancy.enable_job_applications?
        - list.row :personal_statement_guidance, optional: true
      - else
        - list.row :application_link, value_if_attribute_present: open_in_new_tab_link_to(vacancy.application_link, vacancy.application_link, "aria-label": t("jobs.aria_labels.apply_link"))

      - if vacancy.how_to_apply.present?
        - list.row :how_to_apply

      - list.row :contact_email, text: govuk_mail_to(vacancy.contact_email, nil, "aria-label": t("jobs.aria_labels.contact_email_link", email: vacancy.contact_email))
      - list.row :contact_number, value_if_attribute_present: govuk_link_to(vacancy.contact_number, "tel:#{vacancy.contact_number}"), optional: true
      - list.row :school_visits, label: t("jobs.#{school_or_trust_visits(vacancy.parent_organisation)}"), optional: true
