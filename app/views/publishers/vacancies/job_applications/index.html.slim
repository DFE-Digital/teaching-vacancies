- content_for :page_title_prefix, current_organisation.name

= render "publishers/vacancies/banner", vacancy: vacancy
= render "publishers/vacancies/tabs_show", vacancy: vacancy

- if vacancy.within_data_access_period? && job_applications.many?
  .govuk-grid-row class="govuk-!-margin-top-7"
    .govuk-grid-column-full
      = render SortComponent.new path: method(:organisation_job_job_applications_path), sort: sort, url_params: { job_id: vacancy.id }

.govuk-grid-row
  .govuk-grid-column-full
    - if job_applications.any? && vacancy.within_data_access_period?
      - sorted_job_applications.each do |application|
        = render CardComponent.new(classes: "application-#{application.status}") do |card|
          - card.header do
            = tag.div(job_application_view_applicant(vacancy, application))

          - card.body do
            = tag.div(publisher_job_application_status_tag(application.status))
            = tag.div(card.labelled_item(t(".received"), application.submitted_at.strftime("%d %B %Y at %H:%M")))

          - if application.status.in?(%w[reviewed shortlisted submitted])
            - if application.reviewed? || application.submitted?
              - card.action_item link: govuk_link_to(safe_join([t("buttons.shortlist"), tag.span(" #{application.name}", class: "govuk-visually-hidden")]), organisation_job_job_application_shortlist_path(vacancy.id, application.id))
            - card.action_item link: govuk_link_to(safe_join([t("buttons.reject"), tag.span(" #{application.name}", class: "govuk-visually-hidden")]), organisation_job_job_application_reject_path(vacancy.id, application.id))

    - elsif !vacancy.within_data_access_period?
      = govuk_inset_text do
        p = t(".expired_more_than_year")

    - else
      = render EmptySectionComponent.new title: t(".no_applicants")
