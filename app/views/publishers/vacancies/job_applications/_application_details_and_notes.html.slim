= job_application_review(job_application, allow_edit: local_assigns[:allow_edit]) do |r|
  - render "jobseekers/job_applications/job_application_review_sections", r: r, job_application: job_application, vacancy: vacancy
  - r.with_above do

    .with_anchor-link-list class="govuk-!-display-none-print"
      = navigation_list(title: t("jobseekers.job_applications.show.application_sections")) do |navigation|
        - unless job_application.is_a?(UploadedJobApplication)
          - navigation.with_anchor text: t("jobseekers.job_applications.build.personal_details.heading"), href: "#personal_details"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.professional_status.heading"), href: "#professional_status"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.qualifications.heading"), href: "#qualifications"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.training_and_cpds.heading"), href: "#training_and_cpds"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.professional_body_memberships.heading"), href: "#professional_body_memberships"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.employment_history.heading"), href: "#employment_history"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.personal_statement.heading"), href: "#personal_statement"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.referees.heading"), href: "#referees"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.ask_for_support.heading"), href: "#ask_for_support"
          - navigation.with_anchor text: t("jobseekers.job_applications.build.declarations.heading"), href: "#declarations"

  - r.with_sidebar do
    .govuk-summary-card
      .govuk-summary-card__title-wrapper
        h2.govuk-summary-card__title = t("publishers.vacancies.job_applications.show.notes.heading")

      .govuk-summary-card__content
        - job_application.notes.each do |note|
          p.govuk-body-m = note.content
          p.govuk-body-s By #{note.publisher.given_name} #{note.publisher.family_name}, #{note.created_at}
          = govuk_link_to(t("buttons.delete"), organisation_job_job_application_note_path(vacancy.id, job_application, note), method: :delete)
          hr.govuk-section-break.govuk-section-break--l.govuk-section-break--visible

        = form_for @notes_form, url: organisation_job_job_application_notes_path(vacancy.id, job_application), html: { data: { "show-hidden-content-target": "content" } } do |f|
          = f.govuk_error_summary

          = f.govuk_text_area :content, rows: 5, max_chars: 150

          = f.govuk_submit t("buttons.save_note")
