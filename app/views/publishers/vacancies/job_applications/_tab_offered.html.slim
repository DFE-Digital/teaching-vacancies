= govuk_inset_text do
  p = t(".offered_inset")

- if form.candidates[tab_name].exists?
  = form_with(model: form, url: tag_organisation_job_job_applications_path(vacancy.id), method: :get) do |f|
    = f.govuk_error_summary
    - if flash[tab_name]
      = govuk_notification_banner title_text: "Error", success: false, classes: ["govuk-error-colour"] do |notification_banner|
        - notification_banner.with_heading(text: flash[tab_name])

    = f.govuk_check_boxes_fieldset :job_applications, legend: { text: t(".tab.#{tab_name}.heading"), size: "m" } do
      = f.hidden_field :origin, value: tab_name
      = govuk_table(html_attributes: { data: { module: "moj-multi-select", multi_select_checkbox: "#multi_select_#{tab_name}", multi_select_idprefix: "id_all_#{tab_name}" } }) do |table|

        - table.with_head do |head|
          - head.with_row do |row|
            - row.with_cell(html_attributes: { id: "multi_select_#{tab_name}" })
            - row.with_cell(text: t(".name"))
            - row.with_cell(text: t(".contact_details"))
            - row.with_cell(text: t(".offer_date"))
            - row.with_cell(text: t(".application_status"))

        - table.with_body do |body|
          - form.candidates[tab_name].each_with_index do |application, index|
            - body.with_row(html_attributes: { class: "application-#{tab_name}" }) do |row|
              - row.with_cell(text: tag.div(f.govuk_check_box(:job_applications, application.id, link_errors: index.zero?, label: { hidden: true, text: "Select #{application.name}" }),
                                  class: "govuk-checkboxes--small"))
              - row.with_cell(text: govuk_link_to(application.name, organisation_job_job_application_path(vacancy.id, application)))
              - row.with_cell(text: application.email_address)
              - row.with_cell(text: application.offered_at&.to_fs(:day_month_year))
              - row.with_cell(text: publisher_job_application_status_tag(application.status))

      .govuk-button-group
        = f.govuk_submit t(".download_selected"), name: "target", value: "download"
        = f.govuk_submit t(".offer_declined"), name: "target", value: "declined", secondary: true
        = f.govuk_submit t(".copy_applicant_email"), name: "target", value: "emails", secondary: true
      .govuk-button-group
        = f.govuk_submit t(".download_applicant_data"), name: "target", value: "export", secondary: true

- else
  = render EmptySectionComponent.new title: t(".tab.#{tab_name}.none")

- if form.candidates["declined"].exists?
  = govuk_section_break(visible: true, size: "xl")

  = form_with(model: form, url: tag_organisation_job_job_applications_path(vacancy.id), method: :get) do |f|

    = f.govuk_check_boxes_fieldset :job_applications, legend: { text: t(".tab.declined.heading"), size: "m" } do
      = f.hidden_field :origin, value: tab_name
      = govuk_table(html_attributes: { data: { module: "moj-multi-select", multi_select_checkbox: "#multi_select_declined", multi_select_idprefix: "id_all_declined" } }) do |table|

        - table.with_head do |head|
          - head.with_row do |row|
            - row.with_cell(text: t(".name"))
            - row.with_cell(text: t(".contact_details"))
            - row.with_cell(text: t(".decline_date"))

        - table.with_body do |body|
          - form.candidates[tab_name].each do |application|
            - body.with_row(html_attributes: { class: "application-#{application.status}" }) do |row|
              - row.with_cell(text: govuk_link_to(application.name, organisation_job_job_application_path(vacancy.id, application)))
              - row.with_cell(text: application.email_address)
              - row.with_cell(text: application.declined_at&.to_fs(:day_month_year))

- else
  = render EmptySectionComponent.new title: t(".tab.declined.none")
