- r.section :job_role do |s|
  - s.row :show_main_job_role, label: t("jobs.main_job_role"), optional: true
  - unless vacancy.main_job_role == "sendco"
    - s.row :show_additional_job_roles, label: t("jobs.additional_job_roles"), optional: true

- unless current_organisation.school?
  - r.section :job_location, forms: %w[JobLocationForm SchoolsForm]
    dl.govuk-summary-list
      .govuk-summary-list__row
        dt.govuk-summary-list__key
          h4.govuk-heading-s = vacancy_job_location_heading(vacancy)

        dd.govuk-summary-list__value
          ul.govuk-list
            - vacancy.organisations.each do |organisation|
              li class="govuk-!-font-weight-bold govuk-!-margin-bottom-4"
                => organisation.name
                span class="govuk-!-font-weight-regular" = full_address(organisation)

- r.section :job_details, forms: %w[EducationPhasesForm JobDetailsForm] do |s|
  - if vacancy.allow_phase_to_be_set?
    - s.row :phase, text: vacancy.phase&.humanize, label: t("jobs.filters.phases"), optional: true
  - s.row :job_title
  - s.row :contract_type, text: vacancy.contract_type_with_duration
  - if vacancy.allow_key_stages?
    - s.row :show_key_stages, label: t("jobs.key_stage", count: vacancy.key_stages.count), optional: true
  - if vacancy.allow_subjects?
    - s.row :show_subjects, label: t("jobs.subject", count: vacancy.subjects.count), optional: true

- r.section :working_patterns do |s|
  - s.row :working_patterns
  - s.row :working_patterns_details

- r.section :pay_package do |s|
  - s.row :salary
  - s.row :actual_salary, optional: true unless vacancy.model_working_patterns == ["full_time"]
  - s.row :benefits, optional: true

- r.section :important_dates do |s|
  - s.row :publish_on,
    label: t("jobs.publication_date"),
    text: format_date(vacancy.publish_on)
  - s.row :expires_at,
    text: format_time_to_datetime_at(vacancy.expires_at),
    label: t("jobs.application_deadline")
  - s.row :starts_on, text: vacancy.starts_asap? ? t("jobs.starts_asap") : format_date(vacancy.starts_on)

- r.section :documents
  dl.govuk-summary-list
    - if vacancy.supporting_documents.none?
      .govuk-summary-list__row
        dt.govuk-summary-list__key class="govuk-!-font-weight-regular"
          = t("jobs.no_supporting_documents")
    - else
      - vacancy.supporting_documents.each_with_index do |document, index|
        .govuk-summary-list__row
          dt.govuk-summary-list__key class=(index.zero? && "first-question")
            h4.govuk-heading-s = "Document #{index + 1}"
          dd.govuk-summary-list__value class=(index.zero? && "first-question") = document.filename

- r.section :applying_for_the_job do |s|
  - unless current_organisation.group_type == "local_authority"
    - s.row :enable_job_applications
  - if vacancy.enable_job_applications?
    - s.row :personal_statement_guidance, optional: true
  - else
    - s.row :application_link, value_if_attribute_present: open_in_new_tab_link_to(vacancy.application_link, vacancy.application_link, "aria-label": t("jobs.aria_labels.apply_link"))
    - if vacancy.application_form.present?
      - list.row :application_form, text: vacancy.application_form.filename
  - if vacancy.how_to_apply.present?
    - s.row :how_to_apply
  - s.row :contact_email, text: govuk_mail_to(vacancy.contact_email, nil, "aria-label": t("jobs.aria_labels.contact_email_link", email: vacancy.contact_email))
  - s.row :contact_number, value_if_attribute_present: govuk_link_to(vacancy.contact_number, "tel:#{vacancy.contact_number}"), optional: true
  - s.row :school_visits, label: t("jobs.#{school_or_trust_visits(vacancy.parent_organisation)}"), optional: true

- r.section :job_summary do |s|
  - s.row :job_advert
  - s.row :about_school, label: t("jobs.about_school", school: vacancy_about_school_label_organisation(vacancy))
