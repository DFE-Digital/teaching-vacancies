= tag.div(**html_attributes) do
  .govuk-grid-row
    .govuk-grid-column-three-quarters
      .help-guide--mobile.help-guide--border-bottom
        h2.govuk-heading-m = t("jobs.dashboard.how_to_accept_job_applications_guide.title")
        = govuk_link_to(t("jobs.dashboard.how_to_accept_job_applications_guide.link_text"),
                        post_path(section: "get-help-hiring", subcategory: "how-to-create-job-listings-and-accept-applications", post_name: "accepting-job-applications-on-teaching-vacancies"),
                        class: "govuk-link--no-visited-state")
        | .
      span.govuk-caption-l = @organisation.name
      h1.govuk-heading-l = t("jobs.dashboard.#{@selected_type}.with_count", count: @count)
    .govuk-grid-column-one-quarter
      = govuk_link_to t("buttons.create_job"), organisation_jobs_start_path, class: "float-right govuk-button"

  = tabs html_attributes: { "aria-label": "Tabs navigation for vacancy types" } do |tabs|
    - @vacancy_types.each do |vacancy_type|
      - tabs.with_navigation_item text: t("jobs.dashboard.#{vacancy_type}.tab_heading"), link: organisation_jobs_with_type_path(vacancy_type), active: selected_type == vacancy_type

  .govuk-grid-row class="govuk-!-margin-bottom-7"
    - if @vacancies.many?
      .govuk-grid-column-full
        ul.sort-component__list
          - @sort.each do |option|
            li.sort-component__list-item
              - if option.by == @sort.by
                = option.display_name.humanize
              - else
                = govuk_link_to(safe_join([tag.span("#{t('jobs.sort_by.label')} ", class: "govuk-visually-hidden"), option.display_name.humanize]), organisation_jobs_with_type_path({ sort_by: option.by, type: @selected_type }))

    - if @organisation.school_group?
      .govuk-grid-column-one-third-at-desktop class="govuk-!-margin-bottom-4"
        - if @organisation.local_authority?
          = govuk_link_to t("jobs.dashboard.add_or_remove_schools"), edit_publishers_publisher_preference_path(@publisher_preference), class: "govuk-link--no-visited-state"

        div class="govuk-!-margin-top-2"
          = form_for [:publishers, @publisher_preference], html: { data: { controller: "form", "hide-submit": true } } do |f|
            = filters(submit_button: f.govuk_submit(t("buttons.apply_filters")),
                      filters: { total_count: @publisher_preference.organisations.count },
                      clear_filters_link: { text: t("shared.filter_group.clear_all_filters"), url: publishers_publisher_preference_path(@publisher_preference), method: :delete },
                      options: { remove_filter_links: true, publisher_preference: (@publisher_preference if @organisation.local_authority?) },
                      html_attributes: { tabindex: "-1" }) do |filters_component|
                        - filters_component.with_remove_filter_links do |rb|
                          - rb.with_group(key: "locations",
                                     selected: @publisher_preference.organisations.map(&:id),
                                     options: @organisation_options,
                                     value_method: :id,
                                     selected_method: :name,
                                     remove_filter_link: { url_helper: :publishers_remove_organisation_filter_path })

                        - filters_component.with_group key: "locations", component: f.govuk_collection_check_boxes(:organisation_ids, @organisation_options, :id, :label, small: true, legend: { text: "Locations" }, hint: nil, form_group: { data: { action: "change->form#submitListener" } })

            = f.hidden_field :jobs_type, value: @selected_type

        .help-guide--desktop class="govuk-!-margin-top-4"
          h2.govuk-heading-m = t("jobs.dashboard.how_to_accept_job_applications_guide.title")
          = govuk_link_to(t("jobs.dashboard.how_to_accept_job_applications_guide.link_text"),
                          post_path(section: "get-help-hiring", subcategory: "how-to-create-job-listings-and-accept-applications", post_name: "accepting-job-applications-on-teaching-vacancies"),
                          class: "govuk-link--no-visited-state")
          | .
    #vacancy-results class=grid_column_class
      - if vacancies.none?
        = empty_section do
          = no_jobs_text
      - elsif @selected_type == :awaiting_feedback
        = render "publishers/vacancies/vacancies_awaiting_feedback", organisation: @organisation, vacancies: @vacancies
      - else
        = govuk_summary_list do |summary_list|
          - vacancies.each do |vacancy|
            - summary_list.with_row do |row|
              - row.with_key do
                - if vacancy.external?
                  = vacancy.job_title
                  p class="govuk-!-margin-bottom-1"
                    span.govuk-tag.govuk-tag--turquoise = t("jobs.manage.external_tag")
                - else
                  = govuk_link_to(vacancy.job_title, organisation_job_path(vacancy.id))
                - if organisation.school_group?
                  p.govuk-body-s = vacancy_job_location_summary(vacancy)

              - row.with_value do
                - case @selected_type
                - when :live
                  div class="govuk-!-margin-bottom-1"
                    - if vacancy.allow_job_applications?
                      - if vacancy.job_applications.where(status: %w[submitted reviewed shortlisted unsuccessful]).count.positive?
                        = view_applicants(vacancy) unless vacancy_expired_over_a_year_ago?(vacancy)
                      - else
                        p.govuk-body-s = t("jobs.manage.view_applicants", count: 0)
                  dl
                    dt = "#{t('jobs.manage.closing_date')}:"
                    dd = format_time_to_datetime_at(vacancy.expires_at)
                - when :pending
                  dl
                    dt = "#{t('jobs.publication_date')}:"
                    dd = vacancy.publish_on.to_formatted_s
                  dl
                    dt = "#{t('jobs.manage.closing_date')}:"
                    dd = format_time_to_datetime_at(vacancy.expires_at)
                - when :expired
                  - if vacancy.allow_job_applications?
                    - if !vacancy_expired_over_a_year_ago?(vacancy) && vacancy.job_applications.where.not(status: %w[draft withdrawn]).any?
                      = view_applicants(vacancy)
                    - else
                      p.govuk-body-s = t("jobs.manage.view_applicants", count: 0)
                  dl
                    dt = "#{t('jobs.date_listed')}:"
                    dd = vacancy.publish_on.to_formatted_s
                  dl
                    dt = "#{t('jobs.manage.expired.expired_on')}:"
                    dd = format_time_to_datetime_at(vacancy.expires_at)
                  = govuk_link_to(t("publishers.vacancies.show.heading_component.action.give_feedback"), new_organisation_job_expired_feedback_path(job_id: vacancy.id))
                - when :draft
                  dl
                    dt = "#{t('jobs.manage.draft.time_created')}:"
                    dd = format_date(vacancy.created_at.to_date)
                  dl
                    dt = "#{t('jobs.manage.draft.time_updated')}:"
                    dd = format_date(vacancy.updated_at.to_date)
                - if vacancy.external?
                  p.govuk-body-xs.external-notice
                    = t("jobs.manage.external_notice")
              - unless vacancy.external? || vacancy.draft?
                - if vacancy.expired?
                  - row.with_action(text: t("buttons.relist_vacancy"),
                               href: organisation_job_relist_path(vacancy.id),
                               visually_hidden_text: "for #{vacancy.job_title}",
                               html_attributes: { "data-method": "post" })
                  - row.with_action(text: t("buttons.copy_expired_listing"),
                               href: organisation_job_copy_path(vacancy.id),
                               visually_hidden_text: "for #{vacancy.job_title}",
                               html_attributes: { "data-method": "post" })
                - else
                  - row.with_action(text: t("buttons.copy_listing"),
                               href: organisation_job_copy_path(vacancy.id),
                               visually_hidden_text: "for #{vacancy.job_title}",
                               html_attributes: { "data-method": "post" })

    - unless @organisation.school_group?
      .govuk-grid-column-one-quarter
        .help-guide--desktop
          h2.govuk-heading-m = t("jobs.dashboard.how_to_accept_job_applications_guide.title")
          = govuk_link_to(t("jobs.dashboard.how_to_accept_job_applications_guide.link_text"),
                          post_path(section: "get-help-hiring", subcategory: "how-to-create-job-listings-and-accept-applications", post_name: "accepting-job-applications-on-teaching-vacancies"),
                          class: "govuk-link--no-visited-state")
          | .
