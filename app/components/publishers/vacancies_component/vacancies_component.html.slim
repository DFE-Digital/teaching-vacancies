.govuk-grid-row
  .govuk-grid-column-three-quarters
    span.govuk-caption-l = t("jobs.manage.heading_html", organisation: @organisation.name, email: @email)
    h1.govuk-heading-l = t(".#{@selected_type}.with_count_html", count: @vacancies.count)
  .govuk-grid-column-one-quarter
    - if @organisation.all_vacancies.active.any?
      = govuk_button_link_to t("buttons.create_job"), create_or_copy_organisation_jobs_path, class: "float-right"
    - else
      = govuk_button_to t("buttons.create_job"), organisation_jobs_path, class: "float-right"

= tabs do |tabs|
  - @vacancy_types.each do |vacancy_type|
    - tabs.navigation_item text: t(".#{vacancy_type}.tab_heading"), link: jobs_with_type_organisation_path(vacancy_type), active: selected_type == vacancy_type

.govuk-grid-row.vacancies-component class="govuk-!-margin-bottom-7"
  - if @organisation.school_group?
    .govuk-grid-column-one-third class="govuk-!-margin-bottom-5"
      = form_for [:publishers, @publisher_preference], html: { data: { controller: "form", "hide-submit": true } } do |f|
        = filters(form: f,
                  filters: { total_count: @publisher_preference.organisations.count },
                  options: { remove_buttons: true, publisher_preference: (@publisher_preference if @organisation.local_authority?) },
                  html_attributes: { tabindex: "-1" }) do |filters_component|
                    - filters_component.remove_buttons do |rb|
                      - rb.group(key: "locations", selected: @publisher_preference.organisations.map(&:id), options: @organisation_options, value_method: :id, selected_method: :name)

                    - filters_component.group key: "locations", component: f.govuk_collection_check_boxes(:organisation_ids, @organisation_options, :id, :label, small: true, legend: { text: "Locations" }, hint: nil, form_group: { data: { action: "change->form#submitListener" } })

        = f.hidden_field :jobs_type, value: @selected_type

  .vacancies-component__content class=grid_column_class
    - if @vacancies.many?
      = render SortComponent.new sort: @sort, url_params: { type: @selected_type }, path: method(:jobs_with_type_organisation_path)
    section#vacancy-results
      - if vacancies.none?
        = empty_section do
          = no_jobs_text
      - elsif @selected_type == "awaiting_feedback"
        = render "publishers/organisations/vacancies_awaiting_feedback", organisation: @organisation, vacancies: @vacancies
      - else
        - vacancies.each do |vacancy|
          = card(html_attributes: { id: dom_id(vacancy) }) do |c|
            - c.header do
              = tag.div(govuk_link_to(vacancy.job_title, organisation_job_path(vacancy.id), class: "govuk-!-font-weight-bold govuk-!-font-size-24"))
              - if organisation.school_group?
                = tag.div(vacancy.readable_job_location)

            - c.body do
              - case @selected_type
              - when "published"
                - if vacancy.enable_job_applications
                  - if vacancy.job_applications.where(status: %w[submitted reviewed shortlisted unsuccessful]).count.positive?
                    = view_applicants(vacancy) unless vacancy_expired_over_a_year_ago?(vacancy)
                  - else
                    = tag.div(t("jobs.manage.view_applicants", count: 0), class: "govuk-!-font-size-19")
                = tag.div(c.labelled_item(t("jobs.manage.closing_date"), vacancy.application_deadline))
              - when "pending"
                = tag.div(c.labelled_item(t("jobs.publication_date"), vacancy.publish_on))
                = tag.div(c.labelled_item(t("jobs.manage.closing_date"), vacancy.application_deadline))
              - when "expired"
                - if vacancy.enable_job_applications
                  - if !vacancy_expired_over_a_year_ago?(vacancy) && vacancy.job_applications.where.not(status: %w[draft withdrawn]).any?
                    = view_applicants(vacancy)
                  - else
                    = tag.div(t("jobs.manage.view_applicants", count: 0), class: "govuk-!-font-size-19")
                = tag.div(c.labelled_item(t("jobs.date_listed"), vacancy.publish_on))
                = tag.div(c.labelled_item(t("jobs.manage.expired.expired_on"), vacancy.application_deadline))
              - when "draft"
                = tag.div(c.labelled_item(t("jobs.manage.draft.time_created"), format_date(vacancy.created_at.to_date)))
                = tag.div(c.labelled_item(t("jobs.manage.draft.time_updated"), format_date(vacancy.updated_at.to_date)))
