#  https://github.com/djezzzl/database_consistency/wiki/configuration

# Ignore false positive from Rails' ActionText and ActiveStorage
ActionText::RichText:
  enabled: false
ActiveStorage::Attachment:
  enabled: false
ActiveStorage::Blob:
  enabled: false
ActiveStorage::VariantRecord:
  enabled: false

DatabaseConsistencyCheckers:
  # Disable the whole rule since is something that we especifically need (unaswered boolean questions for users) in
  #  multiple fields
  ThreeStateBooleanChecker:
    enabled: false

# Ignore missing uniqueness validations on IDs coming from GIAS DB
# as there is a on_duplicate_key_update in place to deal with conflicts during the import.
SchoolGroupMembership:
  index_school_group_memberships_on_school_id_and_school_group_id:
    UniqueIndexChecker:
      enabled: false
Organisation:
  index_organisations_on_local_authority_code:
    UniqueIndexChecker:
      enabled: false
  index_organisations_on_uid:
    UniqueIndexChecker:
      enabled: false
  index_organisations_on_urn:
    UniqueIndexChecker:
      enabled: false
  # Generated by friendly_id gem. We don't need to model validate it.
  index_organisations_on_slug:
    UniqueIndexChecker:
      enabled: false
# Publishers are created/populated in the background from DSI service, so we don't need to validate it at model level.
Publisher:
  index_publishers_on_oid:
    UniqueIndexChecker:
      enabled: false
# The DB Unique index already grants no duplicate records will be created. But usually we still want to validate it
# in the model to show a proper validation message/error to the user or developer.
# In this case, we do not want to validate it in the model as this table is only used for a has_many_through relationship.
OrganisationVacancy:
  index_organisation_vacancies_on_organisation_id_and_vacancy_id:
    UniqueIndexChecker:
      enabled: false
  index_organisation_vacancies_on_vacancy_id_and_organisation_id:
    UniqueIndexChecker:
      enabled: false
# Devise tokens. We don't need to model validate their uniqueness. We can rely on DB unique index.
Jobseeker:
  index_jobseekers_on_confirmation_token:
    UniqueIndexChecker:
      enabled: false
  index_jobseekers_on_reset_password_token:
    UniqueIndexChecker:
      enabled: false
  index_jobseekers_on_unlock_token:
    UniqueIndexChecker:
      enabled: false
