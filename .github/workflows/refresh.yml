name: Refresh environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        default: staging

jobs:
  refresh-env-vars:
    name: Refresh Env Vars

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.6
          terraform_wrapper: false

      - name: Get current Docker tag from Terraform output
        id: get_docker_tag
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.CF_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.CF_PASSWORD }}
        run: |
          terraform init -reconfigure -input=false
          terraform workspace select ${{ github.event.inputs.environment }}
          echo ::set-output name=tag::$(terraform output docker_tag)
        working-directory: terraform/app

      - name: Trigger Deploy App Workflow
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Deploy App to Environment # Workflow name
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{"environment": "${{ github.event.inputs.environment }}", "tag": "${{ steps.get_docker_tag.outputs.tag }}"}'

      - name: Wait for Deploy App Workflow
        id: wait_for_deploy_app
        uses: fountainhead/action-wait-for-check@v1.0.0
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          checkName: Deploy app to environment # Job name within workflow
          ref: ${{ github.ref }}
          timeoutSeconds: 300
          intervalSeconds: 15

      - name: Send job status message to twd_tv_dev channel
        if: always() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.1.2
        env:
          SLACK_CHANNEL: twd_tv_dev
          SLACK_USERNAME: CI Deployment
          SLACK_TITLE: ${{ github.event.inputs.environment }} env vars refresh ${{ job.status }}
          SLACK_MESSAGE: 'Deployment of Docker tag ${{ steps.get_docker_tag.outputs.tag }} to ${{ github.event.inputs.environment }} - ${{ job.status }}'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
