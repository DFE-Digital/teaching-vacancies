name: Refresh environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        default: staging

concurrency: workflow-Build-and-deploy-dev

jobs:
  refresh-env-vars:
    name: Refresh Env Vars

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          role-to-assume: Deployments
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Get SLACK_WEBHOOK From ParameterStore
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /teaching-vacancies/github_action/infra/slack_webhook
          env_variable_name: SLACK_WEBHOOK

      - name: Get GIT_HUB_SERVICE_ACCOUNT_TOKEN From ParameterStore
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /teaching-vacancies/github_action/infra/git_hub_service_account_token
          env_variable_name: GIT_HUB_SERVICE_ACCOUNT_TOKEN

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8
          terraform_wrapper: false

      - name: Get current Docker tag from Terraform output
        id: get_docker_tag
        run: |
          terraform init -reconfigure -input=false -backend-config="key=${{ github.event.inputs.environment }}/app.tfstate"
          echo ::set-output name=tag::$(terraform output docker_tag)
        working-directory: terraform/app

      - name: Trigger Deploy App Workflow
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Deploy App to Environment # Workflow name
          token: ${{ env.GIT_HUB_SERVICE_ACCOUNT_TOKEN }}
          inputs: '{"environment": "${{ github.event.inputs.environment }}", "tag": "${{ steps.get_docker_tag.outputs.tag }}"}'

      - name: Wait for Deploy App Workflow
        id: wait_for_deploy_app
        uses: fountainhead/action-wait-for-check@v1.0.0
        with:
          token: ${{ env.GIT_HUB_SERVICE_ACCOUNT_TOKEN }}
          checkName: Deploy app to environment # Job name within workflow
          ref: ${{ github.sha }}
          timeoutSeconds: 300
          intervalSeconds: 15

      - name: Send job status message to twd_tv_dev channel
        if: always() && github.ref == 'refs/heads/main'
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: twd_tv_dev
          SLACK_USERNAME: CI Deployment
          SLACK_TITLE: ${{ github.event.inputs.environment }} env vars refresh ${{ job.status }}
          SLACK_MESSAGE: 'Deployment of Docker tag ${{ steps.get_docker_tag.outputs.tag }} to ${{ github.event.inputs.environment }} - ${{ job.status }}'
          SLACK_WEBHOOK: ${{env.SLACK_WEBHOOK}}
