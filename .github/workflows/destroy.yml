name: Destroy

on:
  pull_request:
    branches: [ master ]
    types: [closed]

env:
  DOCKERHUB_REPOSITORY: dfedigital/teaching-vacancies

jobs:
  turnstyle:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: softprops/turnstyle@v1
      name: Check workflow concurrency
      with:
        poll-interval-seconds: 20
        same-branch-only: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: Destroy review app
    needs: turnstyle
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      name: Checkout Code

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1

    - name: Validate secrets
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-west-2
      run: |
        gem install aws-sdk-ssm --no-document
        bin/run-in-env -t /teaching-vacancies/dev -o quiet \
          && echo Data in /teaching-vacancies/dev looks valid

    - name: Terraform pin version
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.6

    - name: Terraform destroy (on PR closed)
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_paas_user: ${{ secrets.CF_USERNAME }}
        TF_VAR_paas_password: ${{ secrets.CF_PASSWORD }}
      run: |
        export TF_VAR_environment=review-pr-${{ github.event.number }}
        terraform init -reconfigure -input=false -backend-config="workspace_key_prefix=review:"
        terraform workspace select review-pr-${{ github.event.number }} || terraform workspace new review-pr-${{ github.event.number }}
        terraform destroy -var-file ../workspace-variables/review.tfvars -auto-approve
        terraform workspace select default && terraform workspace delete review-pr-${{ github.event.number }}
      working-directory: terraform/app

    - name: Send failure message to twd_tv_dev channel
      if: failure()
      uses: rtCamp/action-slack-notify@v2.1.2
      env:
        SLACK_CHANNEL: twd_tv_dev
        SLACK_USERNAME: CI Deployment
        SLACK_ICON_EMOJI: ':cry:'
        SLACK_TITLE: Destroy failure
        SLACK_MESSAGE: 'Failed destruction of review app PR ${{ github.event.number }}'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
