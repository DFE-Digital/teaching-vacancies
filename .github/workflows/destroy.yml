name: Destroy

on:

  pull_request:
    branches: [ master ]
    types: [closed]

env:
  DOCKERHUB_REPOSITORY: dfedigital/teaching-vacancies

jobs:
  turnstyle:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: DFE-Digital/github-actions/turnstyle@master
      name: Check workflow concurrency
      with:
        initial-wait-seconds: 12
        poll-interval-seconds: 20
        same-branch-only: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Destroy review app
    needs: turnstyle
    runs-on: ubuntu-20.04

    steps:

    - name: set environment variable
      run: |
        ENVIRONMENT=review-pr-${{ github.event.number }}
        TAG=${ENVIRONMENT}-${{ github.event.pull_request.head.sha }}
        echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_ENV
        echo "TAG=${TAG}" >> $GITHUB_ENV

    - name: Wait for Deploy App Workflow for review
      id: wait_for_deploy_app
      uses: fountainhead/action-wait-for-check@v1.0.0
      with:
       token: ${{ secrets.PERSONAL_TOKEN }}
       #checkName: Deploy ${{ env.TAG }} to ${{ env.ENVIRONMENT }} # Job name within workflow
       checkName: Create review app ${{ github.event.pull_request.head.sha}}
       ref: ${{ github.event.pull_request.head.sha }}
       timeoutSeconds: 720
       intervalSeconds: 15

    - uses: actions/checkout@v2
      name: Checkout Code

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        role-to-assume: Deployments
        role-duration-seconds: 3600
        role-skip-session-tagging: true

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1

    - name: Download fetch_config.rb
      shell: bash
      run: |
        echo "::group:: Download fetch_config.rb script"
        curl -s https://raw.githubusercontent.com/DFE-Digital/bat-platform-building-blocks/master/scripts/fetch_config/fetch_config.rb -o bin/fetch_config.rb
        chmod +x bin/fetch_config.rb
        echo "::endgroup::"

    - name: Validate secrets
      shell: bash
      run: |
        gem install aws-sdk-ssm --no-document
        bin/fetch_config.rb -s aws-ssm-parameter-path:/teaching-vacancies/dev/app -d quiet \
          && echo Data in /teaching-vacancies/dev looks valid

    - name: Terraform pin version
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.7

    - name: Terraform destroy (on PR closed)
      env:
        TF_VAR_paas_user: ${{ secrets.CF_USERNAME }}
        TF_VAR_paas_password: ${{ secrets.CF_PASSWORD }}
      run: |
        export TF_VAR_environment=${{env.ENVIRONMENT}}
        terraform init -reconfigure -input=false -backend-config="key=review/review-pr-${{ github.event.number }}.tfstate"

      working-directory: terraform/app

    - name: Send failure message to twd_tv_dev channel
      if: failure()
      uses: rtCamp/action-slack-notify@v2.1.3
      env:
        SLACK_CHANNEL: twd_tv_dev
        SLACK_USERNAME: CI Deployment
        SLACK_ICON_EMOJI: ':cry:'
        SLACK_TITLE: Destroy failure
        SLACK_MESSAGE: 'Failed destruction of review app PR ${{ github.event.number }}'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
