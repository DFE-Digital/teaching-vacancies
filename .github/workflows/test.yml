name: Test

on:
  push:
    branches:
      - '**'
    paths-ignore:
    - 'bigquery/**'
    - 'documentation/**'
    - 'terraform/common/**'
    - 'terraform/monitoring/**'
    - '**.md'

jobs:
  backend-tests:
    name: Run rspec

    runs-on: ubuntu-20.04

    env:
      RAILS_ENV: test

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ''
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: '12.x'

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn install

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Run tests
        run: bundle exec rspec --format RspecSonarqubeFormatter --out ${{ github.workspace }}/out/test-report.xml --format documentation

      - name: Keep Code Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: Code_Coverage
          path: ${{ github.workspace }}/coverage/*

      - name: Run sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
           -Dsonar.organization=dfe-digital
           -Dsonar.host.url=https://sonarcloud.io/
           -Dsonar.projectKey=DFE-Digital_teaching-vacancies
           -Dsonar.testExecutionReportPaths=${{ github.workspace }}/out/test-report.xml
           -Dsonar.ruby.coverage.reportPaths=${{ github.workspace }}/coverage/.resultset.json

  frontend-tests:
    name: Run frontend JS unit tests

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2.3.0
        with:
          node-version: '12.x'

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn install

      - name: run frontend tests and linting
        run: yarn run js:test
