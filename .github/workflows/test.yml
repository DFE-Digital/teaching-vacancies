name: Test

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "bigquery/**"
      - "documentation/**"
      - "terraform/common/**"
      - "terraform/monitoring/**"
      - "**.md"

env:
  NODE_VERSION: "12.x"

jobs:
  prepare:
    name: Prepare Node.js dependencies
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node.js dependencies
        run: yarn install

      - name: Archive Node.js dependencies
        run: tar --use-compress-program zstd -cf node_modules.tar.zst node_modules

      - uses: actions/upload-artifact@master
        with:
          name: node-modules
          path: node_modules.tar.zst

  backend-tests:
    name: Run RSpec (${{ matrix.test_params.name }})
    needs: prepare
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        test_params:
          - name: system - jobseekers
            params: "spec/system/jobseekers_*_spec.rb"
          - name: system - publishers
            params: "spec/system/publishers_*_spec.rb"
          - name: system - other & a11y
            params: '--exclude-pattern "spec/system/{jobseekers,publishers}_*_spec.rb" spec/system spec/accessibility'
          - name: unit
            params: '--exclude-pattern "spec/{accessibility,system}/*_spec.rb"'

    env:
      RAILS_ENV: test
      DATABASE_URL: postgis://postgres:postgres@localhost:5432/tvs_test

    services:
      postgres:
        image: postgis/postgis:12-3.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install yarn
        run: npm install yarn -g

      - uses: actions/download-artifact@master
        with:
          name: node-modules
          path: tmp/

      - name: Extract Node.js dependencies
        run: tar --use-compress-program zstd -xf tmp/node_modules.tar.zst

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Run tests
        run: bundle exec rspec --format documentation ${{ matrix.test_params.params }}

  frontend-tests:
    name: Run frontend JS unit tests
    needs: prepare
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install yarn
        run: npm install yarn -g

      - uses: actions/download-artifact@master
        with:
          name: node-modules
          path: tmp/

      - name: Extract Node.js dependencies
        run: tar --use-compress-program zstd -xf tmp/node_modules.tar.zst

      - name: run frontend tests and linting
        run: yarn run js:test
