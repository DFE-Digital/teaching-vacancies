name: PR

on:
  pull_request:
    branches: [ master ]
    types: [assigned, opened, synchronize, reopened, closed]

jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install cloud foundry provider for terraform
      run: |
        set -eux
        TF_PLUGINS_DIR=$HOME/.terraform.d/plugins/linux_amd64
        mkdir -p $TF_PLUGINS_DIR
        wget -O $TF_PLUGINS_DIR/terraform-provider-cloudfoundry https://github.com/cloudfoundry-community/terraform-provider-cf/releases/download/v0.12.2/terraform-provider-cloudfoundry_linux_amd64
        chmod +x $TF_PLUGINS_DIR/terraform-provider-cloudfoundry
        ls -l $TF_PLUGINS_DIR
    
    - name: prepare env variables
      run: |
        set -eux
        echo $GITHUB_EVENT_ACTION
        echo "::set-env name=TF_WORKSPACE_NAME::$TF_WORKSPACE_NAME"
        echo "::set-env name=TF_VAR_web_app_name::teaching-vacancies-$TF_WORKSPACE_NAME"
        echo "::set-env name=TF_VAR_worker_app_name::teaching-vacancies-worker-$TF_WORKSPACE_NAME"
        echo "::set-env name=TF_VAR_postgres_service_name::teaching-vacancies-postgres-$TF_WORKSPACE_NAME"
        echo "::set-env name=TF_VAR_redis_service_name::teaching-vacancies-redis-$TF_WORKSPACE_NAME"
        echo "::set-env name=TF_VAR_papertrail_service_name::teaching-vacancies-papertrail-$TF_WORKSPACE_NAME"
      env:
        TF_WORKSPACE_NAME: ${{ format('pr-{0}', github.event.number) }}
        GITHUB_EVENT_ACTION: ${{ github.event.action }}

    - name: terraform workspace init
      run: |
        set -eux
        pwd && terraform init -backend-config="workspace_key_prefix=env/review"
        terraform workspace select $TF_WORKSPACE_NAME || terraform workspace new $TF_WORKSPACE_NAME
      working-directory: ./terraform/paas
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: terraform plan & apply
      if: github.event_name == 'pull_request' && github.event.action != 'closed'
      working-directory: ./terraform/paas
      run: |
        terraform plan -out tfplan
        terraform apply -auto-approve "tfplan"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_cf_user: ${{ secrets.CF_USERNAME }}
        TF_VAR_cf_password: ${{ secrets.CF_PASSWORD }}
        TF_VAR_cf_space_name: 'teaching-vacancies-review'
        TF_VAR_app_docker_image: 'dfedigital/teaching-vacancies:59fdf784712e8312fc7db42b5ef29e46454356d7'
        TF_VAR_app_stopped : true
    
    - name: terraform destory (on PR closed)
      if: github.event_name == 'pull_request' && github.event.action == 'closed'
      working-directory: ./terraform/paas
      run: |
        terraform plan -destroy -out=tfdestroy
        terraform apply -auto-approve "tfdestroy"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_cf_user: ${{ secrets.CF_USERNAME }}
        TF_VAR_cf_password: ${{ secrets.CF_PASSWORD }}
        TF_VAR_cf_space_name: 'teaching-vacancies-review'
        TF_VAR_app_docker_image: 'dfedigital/teaching-vacancies:59fdf784712e8312fc7db42b5ef29e46454356d7'
        TF_VAR_app_stopped : true

    - name: Post PR comment
      if: github.event_name == 'pull_request' && github.event.action != 'closed'
      run: |
        curl --header "Accept: application/vnd.github.v3+json" \
             --header "Authorization: Bearer ${{ github.token }}" \
             --request POST \
             --data '{"body": "Review app deployed to https://$TF_VAR_web_app_name.london.cloudapps.digital"}' \
             https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments
