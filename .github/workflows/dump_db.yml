name: Dump production database to S3 bucket

on:
  workflow_dispatch:

jobs:
  sync:
    name: Dump production database to S3 bucket
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        role-to-assume: Deployments
        role-duration-seconds: 3600
        role-skip-session-tagging: true

    - name: Get CF_USERNAME From ParameterStore
      uses: "marvinpinto/action-inject-ssm-secrets@latest"
      with:
        ssm_parameter: "/teaching-vacancies/github_action/infra/cf_username_prod"
        env_variable_name: CF_USERNAME_PROD

    - name: Get CF_PASSWORD From ParameterStore
      uses: "marvinpinto/action-inject-ssm-secrets@latest"
      with:
        ssm_parameter: "/teaching-vacancies/github_action/infra/cf_password_prod"
        env_variable_name: CF_PASSWORD

    - name: Get SLACK_WEBHOOK From ParameterStore
      uses: "marvinpinto/action-inject-ssm-secrets@latest"
      with:
        ssm_parameter: "/teaching-vacancies/github_action/infra/slack_webhook"
        env_variable_name: SLACK_WEBHOOK

    - name: Setup cf cli
      uses: DFE-Digital/github-actions/setup-cf-cli@master
      with:
        CF_USERNAME: ${CF_USERNAME_PROD}
        CF_PASSWORD: ${CF_PASSWORD}
        CF_SPACE_NAME: teaching-vacancies-production
        INSTALL_CONDUIT: true


    - name: Install postgres client
      uses: DFE-Digital/github-actions/install-postgres-client@master

    - name: Dump production database to file
      shell: bash
      run: bin/dump-db

    - name: Upload backup to S3
      run: bin/upload-db-backup
      env:
        BACKUP_TYPE: full

    - name: Send job status message to twd_tv_dev channel
      if: always() && github.ref == 'refs/heads/main'
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_CHANNEL: twd_tv_dev
        SLACK_USERNAME: CI Deployment
        SLACK_TITLE: Deployment ${{ job.status }}
        SLACK_MESSAGE: 'Dump production database to S3 bucket - ${{ job.status }}'
        SLACK_WEBHOOK: ${SLACK_WEBHOOK}
