name: Review

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize]
    paths-ignore:
    - 'bigquery/**'
    - 'documentation/**'
    - 'terraform/common/**'
    - 'terraform/monitoring/**'

env:
  DOCKERHUB_REPOSITORY: dfedigital/teaching-vacancies

jobs:
  turnstyle:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: softprops/turnstyle@v1
      name: Check workflow concurrency
      with:
        poll-interval-seconds: 20
        same-branch-only: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: Create review app
    needs: turnstyle
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      name: Checkout Code

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1

    - name: Validate secrets
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-west-2
      run: |
        gem install aws-sdk-ssm --no-document
        bin/run-in-env -t /teaching-vacancies/dev -o quiet \
          && echo Data in /teaching-vacancies/dev looks valid

    - name: Set environment variables
      id: set_env_vars
      run: |
        $(echo "BRANCH=${{ github.head_ref }}" | sed -e 's/\//_/g' >> $GITHUB_ENV)
        ENVIRONMENT=review-pr-${{ github.event.number }}
        TAG=${ENVIRONMENT}-${{ github.sha }}-$(date '+%Y%m%d%H%M%S')
        echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_ENV
        echo "TAG=${TAG}" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push docker image from builder target
      uses: docker/build-push-action@v2
      with:
        build-args: BUILDKIT_INLINE_CACHE=1
        cache-from: |
          ${{ env.DOCKERHUB_REPOSITORY }}:builder-master
          ${{ env.DOCKERHUB_REPOSITORY }}:builder-${{ env.BRANCH }}
        push: true
        tags: ${{ env.DOCKERHUB_REPOSITORY }}:builder-${{ env.BRANCH }}
        target: builder

    - name: Build and push docker image from production target
      uses: docker/build-push-action@v2
      with:
        build-args: BUILDKIT_INLINE_CACHE=1
        cache-from: |
          ${{ env.DOCKERHUB_REPOSITORY }}:builder-master
          ${{ env.DOCKERHUB_REPOSITORY }}:builder-${{ env.BRANCH }}
          ${{ env.DOCKERHUB_REPOSITORY }}:${{ env.BRANCH }}
        push: true
        tags: |
          ${{ env.DOCKERHUB_REPOSITORY }}:${{ env.TAG }}
          ${{ env.DOCKERHUB_REPOSITORY }}:${{ env.BRANCH }}
        target: production

    - name: Trigger Deploy App Workflow for review
      uses: benc-uk/workflow-dispatch@v1.1
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
        ref: ${{ github.event.pull_request.head.ref || github.ref }}
        workflow: Deploy App to Environment # Workflow name
        inputs: '{"environment": "${{ env.ENVIRONMENT }}", "tag": "${{ env.TAG }}"}'

    - name: Wait for Deploy App Workflow for review
      id: wait_for_deploy_app
      uses: fountainhead/action-wait-for-check@v1.0.0
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
        checkName: Deploy ${{ env.TAG }} to ${{ env.ENVIRONMENT }} # Job name within workflow
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
        timeoutSeconds: 720
        intervalSeconds: 15

    - name: Exit whole workflow if deployment was not successful
      if: steps.wait_for_deploy_app.outputs.conclusion != 'success'
      run: exit 1

    - name: Post Sticky Pull Request Comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        message: |
          Review app deployed to <https://teaching-vacancies-review-pr-${{ github.event.number }}.london.cloudapps.digital>

    - name: Trigger Smoke Test
      uses: benc-uk/workflow-dispatch@v1.1
      with:
        workflow: Smoke Test
        token: ${{ secrets.PERSONAL_TOKEN }}
        inputs: '{"sha": "${{ github.sha }}"}'
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Wait for smoke test
      id: wait_for_smoke_test
      uses: fountainhead/action-wait-for-check@v1.0.0
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
        checkName: Smoke Test teaching-vacancies-review-pr-${{ github.event.number }}.london.cloudapps.digital ${{ github.sha }}
        ref: ${{ github.event.pull_request.head.sha || github.sha }}
        timeoutSeconds: 300
        intervalSeconds: 15

    - name: Send job status message to twd_tv_dev channel
      uses: rtCamp/action-slack-notify@v2.1.2
      env:
        SLACK_CHANNEL: twd_tv_dev
        SLACK_USERNAME: CI Deployment
        SLACK_TITLE: Deployment ${{ job.status }}
        SLACK_MESSAGE: 'Review app for https://github.com/DFE-Digital/teaching-vacancies/pull/${{ github.event.number }}/ deployed to https://teaching-vacancies-review-pr-${{ github.event.number }}.london.cloudapps.digital - ${{ job.status }}'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
